0 info it worked if it ends with ok
1 verbose cli [ 'u:\\nodejs\\node.exe',
1 verbose cli   'u:\\nodejs\\node_modules\\npm\\bin\\npm-cli.js',
1 verbose cli   'publish' ]
2 info using npm@2.15.11
3 info using node@v4.8.4
4 verbose publish [ '.' ]
5 silly cache add args [ '.', null ]
6 verbose cache add spec .
7 silly cache add parsed spec Result {
7 silly cache add   raw: '.',
7 silly cache add   scope: null,
7 silly cache add   name: null,
7 silly cache add   rawSpec: '.',
7 silly cache add   spec: 'C:\\orion\\devel\\canis',
7 silly cache add   type: 'directory' }
8 verbose addLocalDirectory C:\Users\HeeSeok\AppData\Roaming\npm-cache\canis\0.1.2\package.tgz not in flight; packing
9 verbose correctMkdir C:\Users\HeeSeok\AppData\Roaming\npm-cache correctMkdir not in flight; initializing
10 verbose tar pack [ 'C:\\Users\\HeeSeok\\AppData\\Roaming\\npm-cache\\canis\\0.1.2\\package.tgz',
10 verbose tar pack   'C:\\orion\\devel\\canis' ]
11 verbose tarball C:\Users\HeeSeok\AppData\Roaming\npm-cache\canis\0.1.2\package.tgz
12 verbose folder C:\orion\devel\canis
13 info prepublish canis@0.1.2
14 verbose addLocalTarball adding from inside cache C:\Users\HeeSeok\AppData\Roaming\npm-cache\canis\0.1.2\package.tgz
15 verbose correctMkdir C:\Users\HeeSeok\AppData\Roaming\npm-cache correctMkdir not in flight; initializing
16 silly cache afterAdd canis@0.1.2
17 verbose afterAdd C:\Users\HeeSeok\AppData\Roaming\npm-cache\canis\0.1.2\package\package.json not in flight; writing
18 verbose correctMkdir C:\Users\HeeSeok\AppData\Roaming\npm-cache correctMkdir not in flight; initializing
19 verbose afterAdd C:\Users\HeeSeok\AppData\Roaming\npm-cache\canis\0.1.2\package\package.json written
20 silly publish { name: 'canis',
20 silly publish   version: '0.1.2',
20 silly publish   description: 'Node.js based RESTful web service for Orion project',
20 silly publish   main: 'server.js',
20 silly publish   scripts:
20 silly publish    { test: 'echo "Error: no test specified" && exit 1',
20 silly publish      start: 'node server.js' },
20 silly publish   repository:
20 silly publish    { type: 'git',
20 silly publish      url: 'git+https://github.com/orionids/canis.git' },
20 silly publish   keywords: [ 'RESTful' ],
20 silly publish   author: { name: 'adaptiveflow' },
20 silly publish   license: 'ISC',
20 silly publish   bugs: { url: 'https://github.com/orionids/canis/issues' },
20 silly publish   homepage: 'https://github.com/orionids/canis#readme',
20 silly publish   readme: '# Canis, Node.js based RESTful web service for Orion project.\n\n## Introduction\nOrion ( http://orionids.org ) project is aimed to be a general purpose\napplication framework which supports various forms of application\nincluding web app.\n\nSo Canis is a part of Orion project and will support :\n- RESTful web service framework, compatible to AWS API gateway. ( initial implementation is done )\n- API definition using JSON and automatic API hirarchy generation for AWS. ( initial implementation is done )\n- Supports popular web app frameworks like Express. ( Partial implementation for express is done )\n\n## New features in 0.1.0 to 0.1.2\n- Functions needed to generate AWS APIs and methods automatically according to api.json\n- Delay and retry to call APIs in AWS SDK ( https://docs.aws.amazon.com/apigateway/latest/developerguide/limits.html )\n- Stage support in api.json\n- API key support\n- Command line option processor\n\n\n## Known todo list\n- Full exception handling for AWS API generation\n- AWS_PROXY support for AWS API generation\n- Static files\n- User account support using popular frameworks\n\n## Usage\nYou should create a file api.json or api.js in current working direcrory and run\n`node canis_path/server.js`\n( Current implementation temporarily listens port 3000 for test )\n\nAn example of api.js which necessarily exports body is below.\nIf there is stage property in global configuration, API URL will be\n`base_url/stage_name/path` and the current stage will be automatically passed to\nthe context of lambda handler - for AWS API auto-generation feature in Canis,\nheader mapping contains similar code to do that :\n```\nexports.body = {\n\t"configuration" : {\n\t\t"stage" : {\n\t\t\t"test1" : {\n\t\t\t\t"comment" : "A test stage",\n\t\t\t\t"apiKey" : "abcd"\n\t\t\t}\n\t\t},\n\t\t"apiKeyRequired" : true,\n\t\t"lambdaPrefix" : "",\n\t\t// optional aws specific parameters\n\t\t"aws-gatewayRegion" : "ca-central-1",\n\t\t"aws-lambdaRegion" : ""\n\t},\n\t"/hello" : {\n\t\t"/{param1}" : {\n\t\t\t"GET" : {\n\t\t\t\t"lambda" : "lambda/param1",\n\t\t\t},\n\t\t\t"/world" : {\n\t\t\t\t"/{param2}" : {\n\t\t\t\t\t"POST" : {\n\t\t\t\t\t\t"lambda" : "lambda/param2"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t"GET" : {\n\t\t\t"lambda" : "lambda/hello",\n\t\t\t"lambdaName" : "sayHello"\n\t\t},\n\t\t"/world" : {\n\t\t\t"GET" : {\n\t\t\t\t"lambda" : "lambda/world"\n\t\t\t}\n\t\t}\n\t}\n};\n```\n\n\n## An example to generate AWS API automatically\n```\nconst server = require( "canis/server" );\nconst awsapi = require( "canis/awsapi" );\n\n// myapi.js ( with exported body )  or myapi.json must be present in cwd\nserver.main( "myapi", function( api, cwd ) {\n\tif ( api ) {\n\t\tvar iter = new awsapi.iterator(\n\t\t\tfunction( iter, code, data ) { // progress callback\n\t\t\t\tswitch ( code ) {\n\t\t\t\t\tcase undefined:\n\t\t\t\t\tconsole.log( "Done." );\n\t\t\t\t\tbreak;\n\t\t\t\t\tcase -1: // an error\n\t\t\t\t\tconsole.log( data );\n\t\t\t\t\tbreak;\n\t\t\t\t\tcase awsapi.PATH:\n\t\t\t\t\tconsole.log( iter.path + data );\n\t\t\t\t\tbreak;\n\t\t\t\t\tcase awsapi.METHOD:\n\t\t\t\t\tconsole.log( data );\n\t\t\t\t\tbreak;\n\t\t\t\t\tcase awsapi.EXISTING_METHOD:\n\t\t\t\t\tdata = iter.path + "/" + data;\n\t\t\t\t\tcase awsapi.EXISTING_PATH:\n\t\t\t\t\tconsole.log( data + " : present" );\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t\tawsapi.createAPI( api, iter,\n\t\t\t"my-api-set-{stage}", // rest api name with symbol \'stage\'\n\t\t\t[process.env], // array of key-value pairs to resolve symbol defined by {symbol}\n\t\t\tnull, // subset path : if path is not null but subset json is null,\n\t\t\t      // try to match path using given parameter \'api\' ( first param )\n\t\t\tnull, // subset json );\n\t} else {\n\t\tconsole.log( "No API definition." );\n\t}\n} );\n```\n',
20 silly publish   readmeFilename: 'README.md',
20 silly publish   gitHead: '570c0b38c8b3c4c4cadd5f9e479e674a963878b6',
20 silly publish   _id: 'canis@0.1.2',
20 silly publish   _shasum: '80b1162c15d0846915efd92af737e797ca68f3cf',
20 silly publish   _from: '.' }
21 verbose getPublishConfig undefined
22 silly mapToRegistry name canis
23 silly mapToRegistry using default registry
24 silly mapToRegistry registry https://registry.npmjs.org/
25 silly mapToRegistry data Result {
25 silly mapToRegistry   raw: 'canis',
25 silly mapToRegistry   scope: null,
25 silly mapToRegistry   name: 'canis',
25 silly mapToRegistry   rawSpec: '',
25 silly mapToRegistry   spec: 'latest',
25 silly mapToRegistry   type: 'tag' }
26 silly mapToRegistry uri https://registry.npmjs.org/canis
27 verbose publish registryBase https://registry.npmjs.org/
28 silly publish uploading C:\Users\HeeSeok\AppData\Roaming\npm-cache\canis\0.1.2\package.tgz
29 verbose request uri https://registry.npmjs.org/canis
30 verbose request sending authorization for write operation
31 info attempt registry request try #1 at 02:30:16
32 verbose request using bearer token for auth
33 verbose request id 7b8bdd127dd28b14
34 http request PUT https://registry.npmjs.org/canis
35 http 403 https://registry.npmjs.org/canis
36 verbose headers { 'content-type': 'application/json',
36 verbose headers   'cache-control': 'max-age=300',
36 verbose headers   'content-length': '91',
36 verbose headers   'accept-ranges': 'bytes',
36 verbose headers   date: 'Thu, 11 Jan 2018 17:30:24 GMT',
36 verbose headers   via: '1.1 varnish',
36 verbose headers   connection: 'keep-alive',
36 verbose headers   'x-served-by': 'cache-hnd18735-HND',
36 verbose headers   'x-cache': 'MISS',
36 verbose headers   'x-cache-hits': '0',
36 verbose headers   'x-timer': 'S1515691824.241324,VS0,VE669',
36 verbose headers   vary: 'Accept-Encoding, Accept' }
37 verbose request invalidating C:\Users\HeeSeok\AppData\Roaming\npm-cache\registry.npmjs.org\canis on PUT
38 error publish Failed PUT 403
39 verbose stack Error: You cannot publish over the previously published version 0.1.2. : canis
39 verbose stack     at makeError (u:\nodejs\node_modules\npm\node_modules\npm-registry-client\lib\request.js:302:12)
39 verbose stack     at CachingRegistryClient.<anonymous> (u:\nodejs\node_modules\npm\node_modules\npm-registry-client\lib\request.js:290:14)
39 verbose stack     at Request._callback (u:\nodejs\node_modules\npm\node_modules\npm-registry-client\lib\request.js:210:14)
39 verbose stack     at Request.self.callback (u:\nodejs\node_modules\npm\node_modules\request\request.js:187:22)
39 verbose stack     at emitTwo (events.js:87:13)
39 verbose stack     at Request.emit (events.js:172:7)
39 verbose stack     at Request.<anonymous> (u:\nodejs\node_modules\npm\node_modules\request\request.js:1044:10)
39 verbose stack     at emitOne (events.js:77:13)
39 verbose stack     at Request.emit (events.js:169:7)
39 verbose stack     at IncomingMessage.<anonymous> (u:\nodejs\node_modules\npm\node_modules\request\request.js:965:12)
40 verbose statusCode 403
41 verbose pkgid canis
42 verbose cwd C:\orion\devel\canis
43 error Windows_NT 10.0.16299
44 error argv "u:\\nodejs\\node.exe" "u:\\nodejs\\node_modules\\npm\\bin\\npm-cli.js" "publish"
45 error node v4.8.4
46 error npm  v2.15.11
47 error code E403
48 error You cannot publish over the previously published version 0.1.2. : canis
49 error If you need help, you may report this error at:
49 error     <https://github.com/npm/npm/issues>
50 verbose exit [ 1, true ]
